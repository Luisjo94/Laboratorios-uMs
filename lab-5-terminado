; Archivo Lab5.s
; Dispositivo PIC16F887
; Autor Luis J. Archila
; pic-as v2.32
    
PROCESSOR 16F887
 #include <xc.inc>
 
 ;configuration word 1
 CONFIG FOSC=INTRC_NOCLKOUT
 CONFIG WDTE=OFF    
 CONFIG PWRTE=OFF    
 CONFIG MCLRE=OFF   
 CONFIG CP=OFF	    
 CONFIG CPD=OFF	    
				; configuración del PIC
 CONFIG BOREN=OFF   
 CONFIG IESO=OFF    
 CONFIG FCMEN=OFF   
 CONFIG LVP=OFF	    
 
 ;configuration word 2
 CONFIG WRT=OFF	    
 CONFIG BOR4V=BOR40V
  
 
;----macros----
 restart_t0	macro
    banksel PORTA
    movlw   61
    movwf   TMR0
    bcf	    T0IF
    endm   
 
;----Variables temporales----
 PSECT udata_shr
    W_TEMP:	    DS 1
    STATUS_TEMP:    DS 1
    
;----Variables----
 PSECT udata_bank0 ; common memory
    ;variables mortales
    cont:	DS  2
    conta:	DS  1
    ;variables pro
    banderas:	DS 1
    nibble:	DS 2
    display_v:	DS 2
    
 ;----Vector Reset----
 PSECT resVect, class=CODE, abs, delta=2
 ORG 00h	;posición 0000h para el reset
 resetVec:
     PAGESEL main
     goto main
 
;----Interrupt vector----
PSECT intVect, class=code, abs, delta=2
ORG 04h
     
push:
    movwf   W_TEMP
    swapf   STATUS, W
    movwf   STATUS_TEMP
    
isr:
    btfsc   T0IF
    call    int_t0
    
pop:
    swapf   STATUS_TEMP
    movwf   STATUS
    swapf   W_TEMP, F
    swapf   W_TEMP, W
    retfie
    
;----subrutinas de interrupcion----
int_t0:
    restart_t0
    clrf    PORTD
    btfsc   banderas, 0
    goto    display_1
    ;goto    display_0
display_0:
    movf    display_v+0, W
    movwf   PORTC
    bsf	    PORTD, 0
    goto    siguiente_display
display_1:
    movf    display_v+1, W
    movwf   PORTC
    bsf	    PORTD, 1
siguiente_display:
    movlw   1
    xorwf   banderas, F
    return
    
    return
 
;****	    codigo principal	    ****     
 PSECT code, delta=2, abs
 ORG 100h	; posición para el código
 
 tabla:
    clrf    PCLATH
    bsf	    PCLATH, 0	; PCLATH = 01
    andlw   0x0f
    addwf   PCL		; PCLATH + PCL + W
    retlw   00111111B ;0
    retlw   00000110B ;1
    retlw   01011011B ;2
    retlw   01001111B ;3
    retlw   01100110B ;4
    retlw   01101101B ;5
    retlw   01111101B ;6
    retlw   00000111B ;7
    retlw   01111111B ;8
    retlw   01101111B ;9
    retlw   01110111B ;A
    retlw   01111100B ;B
    retlw   00111001B ;C
    retlw   01011110B ;D
    retlw   01111001B ;E
    retlw   01110001B ;F
 


;----configuración----
 main:
    call    config_io
    call    config_reloj
    call    tmr0_conf
    banksel PORTA
    
;----loop principal----
 loop:
    
    btfsc   PORTB, 0
    call    inc_cont
    btfsc   PORTB, 1
    call    dec_cont
    
    call    separar_nibbles
    call    preparar_displays
    goto    loop
      
;----sub rutinas----
 config_io:
    banksel ANSEL
    clrf    ANSEL	; pines digitales
    clrf    ANSELH
    
    banksel TRISA
    clrf    TRISA	; port A como salida
    clrf    TRISC	;port C como salida
    bcf	    TRISD, 0	;pin como salida
    bcf	    TRISD, 1	;pin como salida
    bsf	    TRISB, 0	;pines 0 y 1 PORTB como input
    bsf	    TRISB, 1
    
    banksel PORTA
    clrf    PORTA	;eliminar cualquier valor inicial de los puertos de salida
    clrf    PORTC
    clrf    PORTD
    return
 
; ----oscilador a 4 MHz----
config_reloj:
    banksel OSCCON
    bsf	    IRCF2	    ; 0
    bsf	    IRCF1	    ; 1
    bcf	    IRCF0	    ; 0
    bsf	    SCS		    ; reloj interno
    return
    
tmr0_conf:
    banksel TRISA
    bcf	    T0CS    ;reloj interno
    bcf	    PSA	    ;prescaler para tmr0
    bsf	    PS2
    bsf	    PS1
    bsf	    PS0	    ;prescaler 1:256
    restart_t0
    bsf	    GIE
    bsf	    T0IE
    bcf	    T0IF
    return
    
inc_cont:
    btfsc	PORTB, 0
    goto	$-1
    incf	conta
    return
    
dec_cont:
    btfsc	PORTB, 1
    goto	$-1
    decf	conta
    return
    
separar_nibbles:
    movf    conta, w
    andlw   0x0f
    movwf   nibble
    swapf   conta, w
    andlw   0x0f
    movwf   nibble+1
    return
    
preparar_displays:
    movf    nibble, w
    call    tabla
    movwf   display_v
    movf    nibble+1, w
    call    tabla
    movwf   display_v+1
    return
    
 END
